name: CI
on: [push, pull_request]

jobs:
  linter:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.6, 3.7]
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
          flake8 --version
      - name: Lint
        run: |
          flake8 .

  unittest:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 6
      matrix:
        python-version: [3.6]
        # TF-version: [1.3.0, 1.14.0, nightly] # TODO make nightly work
        TF-version: [1.3.0, 1.14.0]
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install scikit-image opencv-python lmdb h5py pyarrow
          python -m pip install .
          python -c "import tensorpack.dataflow"
          # check that dataflow can be imported alone without tensorflow
          python -c "import cv2; print('OpenCV '+ cv2.__version__)"
      - name: Install TF
        env:
          TF_VERSION: ${{ matrix.TF-version }}
          # compatible with travis scripts
          TRAVIS_PYTHON_VERSION: ${{ matrix.python-version }}
        run: |
          ./tests/install-tensorflow.sh
          python -c "import tensorflow as tf; print(tf.VERSION, tf.GIT_VERSION)"

      - name: Run Tests
        env:
          TENSORPACK_DATASET: /home/runner/TP_DATA_TF${{ matrix.TF-version }}
        run: ./tests/run-tests.sh
